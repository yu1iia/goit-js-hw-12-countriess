{"version":3,"sources":["webpack:///./js/inputHandle.js","webpack:///./js/fetchCountries.js"],"names":["defaults","styling","icons","defaultModules","set","PNotifyMobile","inputRef","document","querySelector","searchResultsRef","addEventListener","debounce","event","innerHTML","searchQuery","target","value","fetch","then","result","json","data","length","alert","text","type","delay","stack","Stack","dir1","insertAdjacentHTML","reduce","acc","item","name","createListCountriesTemplate","templateLang","languages","capital","population","flag","createCountryPropertiesTemplate","catch","console","log"],"mappings":"sOAQAA,WAASC,QAAU,cACnBD,WAASE,MAAQ,cAEjBC,iBAAeC,IAAIC,EAAe,IAElC,IAAMC,EAAWC,SAASC,cAAc,WAClCC,EAAmBF,SAASC,cAAc,mBAChDF,EAASI,iBAAiB,QAASC,KAEnC,SAAqBC,GACnBH,EAAiBI,UAAY,IClBQC,EDmBXF,EAAMG,OAAOC,MClBhCC,MAAM,yCAC8BH,GACzCI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WDkBrBF,MAAK,SAAAG,GACAA,EAAKC,OAAS,IAChBC,gBAAM,CACJC,KAAM,8DACNC,KAAM,QACNC,MAAO,IACPC,MAAO,IAAIC,QAAM,CACfC,KAAM,SAIRR,EAAKC,QAAU,GAAKD,EAAKC,QAAU,IACrCb,EAAiBqB,mBACf,YAcV,SAAqCT,GAQnC,MANE,4BACAA,EAAKU,QAAO,SAACC,EAAKC,GAEhB,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IACH,QApBMC,CAA4Bd,IAGZ,IAAhBA,EAAKC,QACPb,EAAiBqB,mBACf,YAmBV,SAAyCT,GACvC,IAAMe,EAAef,EAAK,GAAGgB,UAAUN,QAAO,SAACC,EAAKC,GAElD,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IAOH,MANwB,4BAA4Bb,EAAK,GAAGa,KAAvC,iIAEmCb,EAAK,GAAGiB,QAF3C,oEAGsCjB,EAAK,GAAGkB,WAH9C,+DAIiCH,EAJjC,gDAKUf,EAAK,GAAGmB,KALlB,4BAvBbC,CAAgCpB,OAIrCqB,MAAMC,QAAQC,KC7CJ,IAAwB9B,IDekB,Q","file":"main.b7ce2e4a65663dd3f07b.js","sourcesContent":["import debounce from 'lodash.debounce';\nimport { alert, defaultModules } from '@pnotify/core/dist/PNotify.js';\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\nimport fetchCountries from '/js/fetchCountries.js';\nimport { defaults } from '@pnotify/core';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { Stack } from '@pnotify/core';\n\ndefaults.styling = 'brighttheme';\ndefaults.icons = 'brighttheme';\n\ndefaultModules.set(PNotifyMobile, {});\n\nconst inputRef = document.querySelector('.search');\nconst searchResultsRef = document.querySelector('.search-results');\ninputRef.addEventListener('input', debounce(handleInput, 500));\n\nfunction handleInput(event) {\n  searchResultsRef.innerHTML = '';\n  const countrySearchName = event.target.value;\n  fetchCountries(countrySearchName)\n    .then(data => {\n      if (data.length > 10) {\n        alert({\n          text: 'Too many matches found. Please enter a more specific query!',\n          type: 'error',\n          delay: 4000,\n          stack: new Stack({\n            dir1: 'up',\n          }),\n        });\n      }\n      if (data.length >= 2 && data.length <= 10) {\n        searchResultsRef.insertAdjacentHTML(\n          'beforeend',\n          createListCountriesTemplate(data),\n        );\n      }\n      if (data.length === 1) {\n        searchResultsRef.insertAdjacentHTML(\n          'beforeend',\n          createCountryPropertiesTemplate(data),\n        );\n      }\n    })\n    .catch(console.log);\n}\n\nfunction createListCountriesTemplate(data) {\n  const template =\n    '<ul class=\"country-list\">' +\n    data.reduce((acc, item) => {\n      acc += `<li>${item.name}</li>`;\n      return acc;\n    }, '') +\n    '</ul>';\n  return template;\n}\n\nfunction createCountryPropertiesTemplate(data) {\n  const templateLang = data[0].languages.reduce((acc, item) => {\n    acc += `<li>${item.name}</li>`;\n    return acc;\n  }, '');\n  const templateCountry = `<h2 class='country-name'>${data[0].name}</h2>\n        <div class='wrapper'><div class='country-properties'>\n      <p><span class='country-property'>Capital: </span>${data[0].capital}</p>\n      <p><span class='country-property'>Population: </span>${data[0].population}</p>\n      <h3 class='country-property'>Languages:</h3><ul>${templateLang}</ul></div>\n      <img height='400px' src=\"${data[0].flag}\" alt=\"flag\"></img></div>`;\n  return templateCountry;\n}\n","export default function fetchCountries(searchQuery) {\n  return fetch(\n    `https://restcountries.eu/rest/v2/name/${searchQuery}`,\n  ).then(result => result.json());\n}\n"],"sourceRoot":""}